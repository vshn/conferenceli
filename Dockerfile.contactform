### BUILDER
FROM python:3.12-alpine as builder

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

# Change the working directory to `/app`
WORKDIR /app

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Install dependencies
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev

### RUNTIME
FROM python:3.12-alpine as runtime

WORKDIR /app

RUN apk upgrade --no-cache --available \
    && apk add --no-cache \
    chromium-swiftshader \
    nginx

ENV PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH="/app/contactform" \
    GUNICORN_CMD_ARGS="--workers=1 --bind=unix:/app/gunicorn.sock --access-logfile=-"

COPY --from=builder /app/.venv /app/.venv

COPY contactform ./contactform
COPY nginx.conf /etc/nginx/nginx.conf

RUN set -x && \
    adduser -D contactform && \
    mkdir -p /opt/data && \
    chown -R contactform:root /app /opt/data /var/log/nginx /var/lib/nginx && \
    chmod -R g=u /app /opt/data /var/log/nginx /var/lib/nginx

USER contactform:root

EXPOSE 8080

CMD ["sh", "-c", "nginx && gunicorn contactform.app:app"]
