### BUILDER
FROM python:3.12-alpine as builder

RUN pip install poetry==1.8.3

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

WORKDIR /app

COPY pyproject.toml poetry.lock ./
RUN touch README.md

RUN --mount=type=cache,target=$POETRY_CACHE_DIR poetry install --no-root

### RUNTIME
FROM python:3.12-alpine as runtime

WORKDIR /app

RUN apk upgrade --no-cache --available \
    && apk add --no-cache \
    chromium-swiftshader \
    nginx

ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH="/app/contactform" \
    GUNICORN_CMD_ARGS="--workers=1 --bind=unix:/app/gunicorn.sock --access-logfile=-"

COPY --from=builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}

COPY contactform ./contactform
COPY nginx.conf /etc/nginx/nginx.conf

RUN set -x && \
    adduser -D contactform && \
    mkdir -p /opt/data && \
    chown -R contactform:root /app /opt/data /var/log/nginx /var/lib/nginx && \
    chmod -R g=u /app /opt/data /var/log/nginx /var/lib/nginx

USER contactform:root

EXPOSE 8080

CMD ["sh", "-c", "nginx && gunicorn contactform.app:app"]
